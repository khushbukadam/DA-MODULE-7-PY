1) What are the types of Applications? 
ANS:-
 
1. Web Applications
Python is widely used for server-side web development.

Frameworks: Django, Flask, FastAPI, Pyramid

Examples: Instagram (uses Django), Reddit (originally built on Python)

2. Desktop GUI Applications
Python supports cross-platform desktop applications with graphical user interfaces.

Libraries: Tkinter, PyQt, Kivy, wxPython

Examples: Music players, text editors, file browsers

3. Data Science and Machine Learning Applications
Python is dominant in the fields of data analysis, visualization, and AI.

Libraries: NumPy, Pandas, Scikit-learn, TensorFlow, PyTorch, Matplotlib

Examples: Data analysis tools, predictive models, recommendation systems

4. Automation and Scripting
Python is great for automating repetitive tasks and writing small utility scripts.

Use Cases: File renaming, web scraping, data entry automation

Libraries: BeautifulSoup, Selenium, PyAutoGUI

5. Game Development
While not as common as other languages for gaming, Python is used for simple games and prototypes.

Libraries: Pygame, Panda3D

Examples: 2D games, educational games

6. Embedded Systems and IoT
Python (specifically MicroPython or CircuitPython) is used in small-scale hardware devices.

Platforms: Raspberry Pi, Arduino (with special support), ESP32

7. Mobile Applications
Though not a primary choice, Python can be used to build mobile apps.

Tools: Kivy, BeeWare

Limitations: Less support compared to native languages

8. Enterprise Applications
Python can power large, scalable systems in enterprise settings.

Examples: ERP systems, CRM software

Frameworks: Odoo (ERP system built with Python)

9. Scientific and Numeric Applications
Used extensively in academic research and scientific computing.

Libraries: SciPy, SymPy, BioPython, Astropy

10. Cybersecurity and Hacking Tools
Python is favored for building tools used in cybersecurity, ethical hacking, and penetration testing.

Tools: Scapy, Nmap (with Python), Pwntools


2) What is programing?
 
ANS:-
 Programming in Python refers to writing code using the Python programming language, which is a popular, high-level, general-purpose language known for its simplicity and readability.
 

(3)what is python?
 ANS:-
 
 Python is a high-level, general-purpose programming language known for its readability and versatility.
 It's widely used in web development, data analysis, machine learning, and automation, among other applications.
 Python's simple syntax, extensive libraries, and ability to run on various platforms make it a popular choice for both beginners and experienced developers. 


(4)write a python program to check  if anumber is positive,negative or zero 

 ANS:-
num = float(input("Enter a number: "))
if num > 0:
   print("Positive number")
elif num == 0:
   print("Zero")
else:
   print("Negative number")

(5)write python program to get the factoriol number  of given numbers.

ANS:-

Python

def factorial(n):
    if n < 0:
        return "Factorial is not defined for negative numbers"
    elif n == 0:
        return 1
    else:
        result = 1
        for i in range(1, n + 1):
            result *= i
        return result
This code defines a function factorial that takes an integer n as input. If n is negative, it returns an error message. 
If n is 0, it returns 1 (since the factorial of 0 is 1). Otherwise, it calculates the factorial using a for loop and returns the result.
For example, if you call factorial(5), the function will return 120, because 5! = 5 * 4 * 3 * 2 * 1 = 120.

(6)write python program to get the fibonacci series of given range.

ANS:-

def fibonacci_sequence(limit):
    """
    Generates the Fibonacci sequence up to a specified limit.

    Args:
        limit (int): The upper limit of the sequence.

    Returns:
        list: A list containing the Fibonacci numbers up to the limit.
    """
    results = []
    a, b = 0, 1
    while a <= limit:
        results.append(a)
        a, b = b, a + b
    return results

# Get input from the user
limit = int(input("Enter the limit for the Fibonacci sequence: "))

# Generate and print the Fibonacci sequence
fib_sequence = fibonacci_sequence(limit)
print("Fibonacci sequence up to", limit, ":", fib_sequence)

(7)how memory is managed in python?

ANS:-
 Python manages memory automatically through a combination of reference counting and a garbage collector, operating on a private heap space. 
 This means that programmers generally don't need to manually allocate or deallocate memory as in languages like C or C++.
 Python uses a private heap to store all objects, and the Python memory manager handles allocation and deallocation. 

(8) what is the purpose continuing statemnt in python?

ANS:

The continue statement in Python serves to skip the remaining code within the current iteration of a loop (either a for or a while loop) and proceed to the next iteration. 
It is useful when a specific condition is met within the loop, and you want to bypass the rest of the code block for that particular iteration without terminating the entire loop. 
For example, consider the following code:

for i in range(1, 10):
    if i % 2 == 0:
        continue  # Skip even numbers
    print(i)

In this case, when i is even, the continue statement is executed, causing the print(i) line to be skipped,
 and the loop proceeds to the next value of i. As a result, the output will only include odd numbers from 1 to 9.









